{"version":3,"sources":["utils/shufleFisherYates.js","utils/checkBoardSolvability.js","components/st-theame.js","components/st-game.js","components/Swipe.js","components/Game.js","serviceWorker.js","index.js"],"names":["arr","i","length","j","m","Math","floor","random","n","temp","matrix","N","indexOfMain","getIndexOfMain","computedArr","fromMatrixToComputedArr","posOfMainFromBottomAtMatrix","inversion","getInversionCount","conditionOne","isOdd","isEven","conditionTwo","conditionTwoSubOne","conditionTwoSubTwo","reduce","acc","row","findIndex","el","main","computedRow","map","x","y","arrEl","index","slice","accum","elem","number","Second","Item","Right","Nav","styled","nav","Btn","div","Container","Tile","props","state","setBgColor","Demo","handleSwipeLeftListener","onChangeGameState","keyCode","handleSwipeDownListener","handleSwipeRightListener","handleSwipeUpListener","children","this","nodeName","detectTouch","onSwipeEnd","handleSwipeEnd","onSwipedLeft","onSwipedRight","onSwipedDown","onSwipedUp","React","Component","Game","enabled","wrongItems","gameState","genereteDefaultGameState","handleStartGame","container","focus","gs","generateRandomSolvableGs","wrongs","getWrongItems","stateSetter","handleBreakGame","handleChangeGameState","ev","swapItems","alert","setContainerRef","containerRef","shufleFisherYates","isSolved","isSolvable","undefined","forEach","val","item","push","a","b","findMain","swapArrayElem","c","key","swapHandler","setState","Array","from","right","includes","tileState","onClick","ref","onKeyDown","tabIndex","generateItems","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","addEventListener","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5fdc6481.chunk.js","sourcesContent":["export default arr => {\n    for (let i = arr.length - 1; i > 0; i--) {\n        for (let j = arr.length - 1; j > 0; j--) {\n            const m = Math.floor(Math.random() * i);\n            const n = Math.floor(Math.random() * j);\n            const temp = arr[i][j];\n\n            /* eslint-disable */\n            arr[i][j] = arr[m][n];\n            arr[m][n] = temp;\n            /* eslint-enable */\n        }\n    }\n\n    return arr;\n};\n\n","/* eslint-disable no-param-reassign */\n\nexport default matrix => {\n    const N = matrix.length;\n    const indexOfMain = getIndexOfMain(matrix);\n    const computedArr = fromMatrixToComputedArr(matrix);\n\n    const posOfMainFromBottomAtMatrix = N - Math.floor(indexOfMain / N);\n    const inversion = getInversionCount(computedArr, N);\n\n    const conditionOne = isOdd(N) && isEven(inversion);\n    const conditionTwo = isEven(N);\n    const conditionTwoSubOne = isOdd(posOfMainFromBottomAtMatrix) && isEven(inversion);\n    const conditionTwoSubTwo = isEven(posOfMainFromBottomAtMatrix) && isOdd(inversion);\n\n    return conditionOne || (conditionTwo && (conditionTwoSubOne || conditionTwoSubTwo));\n};\n\nconst getIndexOfMain = matrix => matrix.reduce((acc, row) => [ ...acc, ...row ], []).findIndex(el => el.main);\n\nconst fromMatrixToComputedArr = matrix =>\n    matrix.reduce((acc, row) => {\n        const computedRow = row.map(el => el.x + el.y * matrix.length + 1);\n\n        return [ ...acc, ...computedRow ];\n    }, []);\n\nconst getInversionCount = (arr, N) =>\n    arr.reduce((acc, arrEl, index) => {\n        if (arrEl !== N ** 2) {\n            const slicedArr = arr.slice(index + 1);\n\n            return acc + slicedArr.reduce((accum, elem) => (arrEl < elem && arrEl !== 16 ? accum : ++accum), 0);\n        }\n\n        return acc;\n    }, 0);\n\nconst isEven = number => Math.floor(number / 2) === number / 2;\nconst isOdd = number => !isEven(number);\n\n// const st = [\n//     [ { x: 0, y: 3 }, { x: 1, y: 0 }, { x: 1, y: 2 }, { x: 2, y: 0 } ],\n//     [ { x: 0, y: 0 }, { x: 3, y: 2 }, { x: 3, y: 1 }, { x: 3, y: 0 } ],\n//     [ { x: 0, y: 1 }, { x: 3, y: 3, main: true }, { x: 0, y: 2 }, { x: 1, y: 1 } ],\n//     [ { x: 2, y: 3 }, { x: 1, y: 3 }, { x: 2, y: 2 }, { x: 2, y: 1 } ]\n// ];\n\n// const stSec = [\n//     [ { x: 1, y: 1 }, { x: 0, y: 3 }, { x: 2, y: 1 }, { x: 1, y: 2 } ],\n//     [ { x: 3, y: 1 }, { x: 0, y: 2 }, { x: 2, y: 2 }, { x: 3, y: 3, main: true } ],\n//     [ { x: 2, y: 3 }, { x: 1, y: 0 }, { x: 3, y: 2 }, { x: 0, y: 1 } ],\n//     [ { x: 1, y: 3 }, { x: 2, y: 0 }, { x: 0, y: 0 }, { x: 3, y: 0 } ]\n// ];\n\n// const stThird = [\n//     [ { x: 2, y: 0 }, { x: 0, y: 2 }, { x: 0, y: 0 }, { x: 2, y: 3 } ],\n//     [ { x: 1, y: 3 }, { x: 2, y: 2 }, { x: 3, y: 0 }, { x: 1, y: 1 } ],\n//     [ { x: 0, y: 3 }, { x: 3, y: 3, main: true }, { x: 1, y: 2 }, { x: 3, y: 2 } ],\n//     [ { x: 1, y: 0 }, { x: 2, y: 1 }, { x: 3, y: 1 }, { x: 0, y: 1 } ]\n// ];\n","export const Main = \"darkorange\";\nexport const Second = \"white\";\n\nexport const Item = \"#fe9802\";\nexport const Right = \"green\";\n\nexport const Button = \"#804600\";\nexport const ButtonHover = \"#552f00\";\n","import styled from \"styled-components\";\nimport { Second, Main, Button, ButtonHover, Right, Item } from \"./st-theame\";\n\nexport const Nav = styled.nav`\n    display: flex;\n`;\n\nexport const Btn = styled.div`\n    box-sizing: border-box;\n    border: none;\n    padding: 10px;\n    margin: 15px;\n    background-color: ${Button};\n    color: ${Second};\n    cursor: pointer;\n\n    &:hover {\n        background-color: ${ButtonHover};\n    }\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    user-select: none;\n    width: 40vh;\n    height: 40vh;\n    background-color: ${Second};\n    border: 1px solid ${Main};\n    box-shadow: 2px 2px 10px ${Main};\n`;\n\nfunction setBgColor(props) {\n    switch (props.state) {\n        case \"default\":\n            return Item;\n        case \"main\":\n            return Second;\n        case \"right\":\n            return Right;\n        default:\n            break;\n    }\n}\n\nexport const Tile = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    width: 25%;\n    height: 25%;\n    border: 2.5px solid white;\n    font-size: 1rem;\n    background-color: ${props => setBgColor(props)};\n`;\n","import React from \"react\";\nimport { Swipe } from \"react-swipe-component\";\nimport PropTypes from \"prop-types\";\n\nexport default class Demo extends React.Component {\n    static propTypes = {\n        children          : PropTypes.node.isRequired,\n        onChangeGameState : PropTypes.func.isRequired\n    };\n\n    // ---- LEFT -------\n    handleSwipeLeftListener = () => this.props.onChangeGameState({ keyCode: 37 });\n\n    // ---- TOP -------\n    handleSwipeDownListener = () => this.props.onChangeGameState({ keyCode: 40 });\n\n    // ---- RIGHT -----\n    handleSwipeRightListener = () => this.props.onChangeGameState({ keyCode: 39 });\n\n    // ---- DOWN ------\n    handleSwipeUpListener = () => this.props.onChangeGameState({ keyCode: 38 });\n\n    render() {\n        const { children } = this.props;\n\n        return (\n            <Swipe\n                nodeName=\"div\"\n                detectTouch\n                onSwipeEnd={this.handleSwipeEnd}\n                onSwipedLeft={this.handleSwipeLeftListener}\n                onSwipedRight={this.handleSwipeRightListener}\n                onSwipedDown={this.handleSwipeDownListener}\n                onSwipedUp={this.handleSwipeUpListener}\n            >\n                {children}\n            </Swipe>\n        );\n    }\n}\n","import React, { Fragment } from \"react\";\n\nimport shufleFisherYates from \"../utils/shufleFisherYates\";\nimport isSolvable from \"../utils/checkBoardSolvability\";\nimport { Container, Btn, Nav, Tile } from \"./st-game\";\nimport Swipe from \"./Swipe\";\n\nexport default class Game extends React.Component {\n    state = {\n        enabled    : false,\n        wrongItems : [],\n        gameState  : this.genereteDefaultGameState()\n    };\n\n    handleStartGame = () => {\n        if (this.container) {\n            this.container.focus();\n        }\n        const gs = this.generateRandomSolvableGs(this.state.gameState);\n        const wrongs = this.getWrongItems(gs);\n\n        this.stateSetter(true, gs, wrongs);\n    };\n\n    handleBreakGame = () => {\n        this.stateSetter(false, this.genereteDefaultGameState(), []);\n    };\n\n    handleChangeGameState = ev => {\n        if (this.state.enabled && ev.keyCode <= 40 && ev.keyCode >= 37) {\n            const gs = this.swapItems(ev.keyCode);\n            const wrongs = this.getWrongItems(gs);\n\n            let enabled = true;\n\n            if (wrongs !== null && wrongs.length === 0) {\n                // eslint-disable-next-line\n                alert(\"YOU ARE WIN A GAME!!!\");\n                enabled = false;\n            }\n\n            this.stateSetter(enabled, gs, wrongs);\n        }\n    };\n\n    getWrongItems(gameState) {\n        const wrongs = [];\n\n        if (gameState !== undefined) {\n            gameState.forEach((val, y) =>\n                val.forEach((item, x) => (!(item.x === x && item.y === y) ? wrongs.push(item) : null))\n            );\n\n            return wrongs;\n        }\n\n        return null; // set last version of wrongsItems, because (null || [last wrongs cofig])  => [last wrongs cofig]\n    }\n\n    setContainerRef = containerRef => (this.container = containerRef);\n\n    swapHandler(a, b) {\n        const gs = this.state.gameState;\n        const main = this.findMain(gs);\n        const item = {\n            y : main.y + b,\n            x : main.x + a\n        };\n\n        if (item.y < 4 && item.y > -1 && (item.x < 4 && item.x > -1)) {\n            return this.swapArrayElem(gs, main, item);\n        }\n    }\n\n    findMain(gs) {\n        // eslint-disable-next-line\n        for (let y = 0; y < gs.length; y++) {\n            // eslint-disable-next-line\n            for (let x = 0; x < gs[y].length; x++) {\n                if (gs[y][x].main) return { y, x };\n            }\n        }\n    }\n\n    swapArrayElem(arr, a, b) {\n        const c = arr[a.y][a.x];\n\n        /* eslint-disable */\n        arr[a.y][a.x] = arr[b.y][b.x];\n        arr[b.y][b.x] = c;\n        /* eslint-enable */\n\n        return arr;\n    }\n\n    swapItems(key) {\n        let gameState;\n\n        switch (key) {\n            // ---- LEFT -------\n            case 37:\n                gameState = this.swapHandler(-1, 0);\n                break;\n\n            // ---- TOP --------\n            case 38:\n                gameState = this.swapHandler(0, -1);\n                break;\n\n            // ---- RIGHT ------\n            case 39:\n                gameState = this.swapHandler(1, 0);\n                break;\n\n            // ---- DOWN -------\n            case 40:\n                gameState = this.swapHandler(0, 1);\n                break;\n            default:\n                break;\n        }\n\n        return gameState;\n    }\n\n    stateSetter(enabled, gameState, wrongs) {\n        this.setState({\n            enabled,\n            gameState  : gameState || this.state.gameState,\n            wrongItems : wrongs || this.state.wrongItems\n        });\n    }\n\n    generateRandomSolvableGs = gs => {\n        let matrix = shufleFisherYates(gs);\n\n        let isSolved = isSolvable(matrix);\n\n        while (!isSolved) {\n            matrix = shufleFisherYates(matrix);\n            isSolved = isSolvable(matrix);\n        }\n\n        return matrix;\n    };\n\n    genereteDefaultGameState() {\n        const gameState = Array.from(Array(4), (val, y) => Array.from(Array(4), (item, x) => ({ y, x })));\n\n        gameState[3][3].main = true;\n\n        return gameState;\n    }\n\n    generateItems() {\n        return this.state.gameState.map(val => {\n            return val.map(item => {\n                const number = item.x + item.y * 4 + 1;\n                const right = !this.state.wrongItems.includes(item);\n\n                let tileState = \"default\";\n\n                if (item.main) tileState = \"main\";\n                else if (right) tileState = \"right\";\n\n                return (\n                    <Tile key={number} state={tileState}>\n                        {number}\n                    </Tile>\n                );\n            });\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h1>15-puzzle</h1>\n                <Nav>\n                    <Btn onClick={this.handleStartGame}>#shuffleGame</Btn>\n                    <Btn onClick={this.handleBreakGame}>#breakGame</Btn>\n                </Nav>\n                <div>\n                    <Swipe onChangeGameState={this.handleChangeGameState}>\n                        <Container ref={this.setContainerRef} onKeyDown={this.handleChangeGameState} tabIndex=\"0\">\n                            {this.generateItems()}\n                        </Container>\n                    </Swipe>\n                </div>\n            </Fragment>\n        );\n    }\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Game from \"./components/Game\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nwindow.addEventListener(\"appinstalled\", () => {\n    console.log(\"a2hs installed\");\n});\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}